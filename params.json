{"name":"EventMachine-LE","body":"## Overview\r\n\r\nEventMachine-LE (Live Edition) is a branch of [EventMachine](http://github.com/eventmachine/eventmachine) with fixes and more features.\r\n\r\n## What do you mean by \"branch\"? ##\r\n\r\nWell, outside the narrower git circles, \"fork\" has all these negative\r\nconnotations, as in bad feelings after an argument, marriages\r\ndivorcing, nation states splitting after a civil war, people hating\r\neach other.  This is not at all the point here, so let's call this\r\nfork a \"branch\".\r\n\r\n## Purpose of this branch ##\r\n\r\nThis branch incorporates interesting pull requests that are not yet\r\nincluded in the mainline EventMachine repository.  The maintainers of\r\nthat version prefer to minimize change in order to keep the stability\r\nwith already existing EventMachine deployments, which provides an\r\nimpressive multi-platform base for IPv4 TCP servers (e.g., Web\r\nservers) that don't need good UDP or IPv6 support.\r\n\r\nThis dedication to stability is helpful for production use, but can\r\nalso lead to ossification.  The present \"Live Edition\" or \"Leading\r\nEdge\" branch has its focus on supporting a somewhat wider use,\r\nincluding new Web servers or protocols beyond the HTTP Web.\r\n\r\nTo provide even more focus, this branch is currently applying its\r\nenergy towards Linux and Unix/BSD/OSX environments.  Java reactor and\r\npure Ruby reactor are for now removed in this branch, and\r\nWindows/Cygwin support is untested.  This may very well change later,\r\nonce interesting pull requests come in.\r\n\r\nEventMachine-LE draws from a number of dormant pull requests on the\r\nmainline version of EventMachine.  New proposals will also directly\r\ncome to EventMachine-LE and will be included once they are tested.\r\n\r\nThis is not a \"development branch\" — we do use EventMachine-LE in production,\r\njust beyond the focus of mainline EventMachine.\r\n\r\nThe intention is that EventMachine-LE is always a drop-in replacement\r\nfor EventMachine, just with additional (and fixed) functionality.\r\n\r\n\r\n## Features and changes ##\r\n\r\nThe list of additions and improvements will grow over time. Currently\r\nthe following features/fixes have been applied in EventMachine-LE:\r\n\r\n* Full IPv6 support for TCP and UDP, in both server and client mode ([cabo]([https://github.com/eventmachine/eventmachine/pull/297)).\r\n* Added robustness to datagram sockets, which now can optionally not to get destroyed on the first error by setting `EM::Connection#send_error_handling=mode` ([cabo]([https://github.com/eventmachine/eventmachine/pull/297)).\r\n* `EM::attach_server` added ([ramonmaruko](https://github.com/eventmachine/eventmachine/pull/271)).\r\n* `EM::RestartableTimer` added ([adzap](https://github.com/eventmachine/eventmachine/pull/114)).\r\n* `EM::get_max_timers` and `EM::set_max_timers` are removed (they still exist but do nothing). This solves the annoying \"RuntimeError: max timers exceeded\" exception.\r\n* Support for Enumerable in `EM::Iterator` ([fl00r](https://github.com/eventmachine/eventmachine/pull/300)).\r\n* Improvements to `EM::Protocols::LineProtocol` and have it autoload ([gaffneyc](https://github.com/eventmachine/eventmachine/pull/151)).\r\n* `EM::Protocols::SmtpServer`: support multiple messages per one connection and login auth type ([bogdan](https://github.com/eventmachine/eventmachine/pull/288)).\r\n* Reimplement `EM::Queue` to avoid shift/push performance problem ([grddev](https://github.com/eventmachine/eventmachine/pull/311)).\r\n* Many code cleanups.\r\n\r\n\r\n## Installation ##\r\n\r\nThe Current stable version is eventmachine-le-1.1.0 (published as Ruby Gem), installable via:\r\n<pre>\r\ngem install eventmachine-le\r\n</pre>\r\n\r\nIf you want the beta version (not fully tested) install it by using `--pre` option:\r\n<pre>\r\ngem install eventmachine-le --pre\r\n</pre>\r\n\r\n\r\n## Usage ##\r\n\r\nUsing EventMachine-LE within your project just requires loading it as follows:\r\n<pre>\r\n# First load EventMachine-LE.\r\nrequire \"eventmachine-le\"\r\n\r\n# NOTE: It does not hurt to call \"require 'eventmachine'\" later\r\n# (it has no effect at all).\r\n\r\n# Then load any other Ruby Gem depending on EventMachine so it\r\n# will use EventMachine-LE.\r\nrequire \"em-udns\"\r\n</pre>\r\n\r\nBy doing this, you will avoid conflicts with the main EventMachine Gem (if it's also installed).\r\n\r\n\r\n## Authors ##\r\n\r\nThis branch is mantained by [Carsten Bormann](https://github.com/cabo) and [Iñaki Baz Castillo](https://github.com/ibc).\r\n","tagline":"EventMachine-LE (Live Edition), a \"branch\" of EventMachine with fixes and more features","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}